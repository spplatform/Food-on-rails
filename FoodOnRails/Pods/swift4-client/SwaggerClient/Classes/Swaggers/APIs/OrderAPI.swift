//
// OrderAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class OrderAPI {
    /**
     get order
     
     - parameter _id: (path) The order ID. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderIdGet(_id: String, completion: @escaping ((_ data: OrderResponse?,_ error: Error?) -> Void)) {
        orderIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     get order
     - GET /order/{id}
     - examples: [{contentType=application/json, example={
  "positions" : [ {
    "amount" : 0,
    "id" : "id"
  }, {
    "amount" : 0,
    "id" : "id"
  } ],
  "id" : "id"
}}]
     
     - parameter _id: (path) The order ID. 

     - returns: RequestBuilder<OrderResponse> 
     */
    open class func orderIdGetWithRequestBuilder(_id: String) -> RequestBuilder<OrderResponse> {
        var path = "/order/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<OrderResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     get order status
     
     - parameter _id: (path) The order ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderIdStatusGet(_id: String, completion: @escaping ((_ data: OrderStatusResponse?,_ error: Error?) -> Void)) {
        orderIdStatusGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     get order status
     - GET /order/{id}/status
     - examples: [{contentType=application/json, example={
  "description" : "description",
  "id" : "id",
  "status" : "status"
}}]
     
     - parameter _id: (path) The order ID 

     - returns: RequestBuilder<OrderStatusResponse> 
     */
    open class func orderIdStatusGetWithRequestBuilder(_id: String) -> RequestBuilder<OrderStatusResponse> {
        var path = "/order/{id}/status"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<OrderStatusResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     create order
     
     - parameter body: (body) The GitHub API url to call 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func orderPost(body: OrderRequest, completion: @escaping ((_ data: OrderCreateResponse?,_ error: Error?) -> Void)) {
        orderPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     create order
     - POST /order
     - examples: [{contentType=application/json, example={
  "payment_url" : "payment_url",
  "positions" : [ {
    "amount" : 0,
    "id" : "id"
  }, {
    "amount" : 0,
    "id" : "id"
  } ],
  "id" : "id",
  "status" : {
    "positions" : [ {
      "amount" : 0,
      "id" : "id"
    }, {
      "amount" : 0,
      "id" : "id"
    } ],
    "id" : "id"
  }
}}]
     
     - parameter body: (body) The GitHub API url to call 

     - returns: RequestBuilder<OrderCreateResponse> 
     */
    open class func orderPostWithRequestBuilder(body: OrderRequest) -> RequestBuilder<OrderCreateResponse> {
        let path = "/order"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<OrderCreateResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
